-- CRIAÇÂO DE TABELAS
CREATE TABLE Cliente (
    idCliente INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100),
    telefone VARCHAR(15)
);

CREATE TABLE Pet (
    idPet INT AUTO_INCREMENT PRIMARY KEY,
    idCliente INT,
    especie VARCHAR(50),
    idade INT,
    FOREIGN KEY (idCliente) REFERENCES Cliente(idCliente)
);

CREATE TABLE Servico (
    idServico INT AUTO_INCREMENT PRIMARY KEY,
    descricao VARCHAR(200),
    preco DECIMAL(10, 2)
);

-- Criar tabelas para relacionamentos, se necessário
CREATE TABLE PetServico (
    idPet INT,
    idServico INT,
    PRIMARY KEY (idPet, idServico),
    FOREIGN KEY (idPet) REFERENCES Pet(idPet),
    FOREIGN KEY (idServico) REFERENCES Servico(idServico)
);

-- INSERIR DADOS DOS CLIENTES
INSERT INTO Cliente (nome, telefone) VALUES ('Rafael', '1234567890');
INSERT INTO Cliente (nome, telefone) VALUES ('Daniel', '9876543210');
INSERT INTO Cliente (nome, telefone) VALUES ('Aparecida', '1472583690');

-- INSERIR DADOS DOS PET
INSERT INTO Pet (idCliente, especie, idade) VALUES (1, 'Cachorro', 4);
INSERT INTO Pet (idCliente, especie, idade) VALUES (2, 'Gato', 6);

-- INSERIR DADOS DOS SERVIÇOS
INSERT INTO Servico (descricao, preco) VALUES ('Banho', 50.00);
INSERT INTO Servico (descricao, preco) VALUES ('Consulta', 80.00);

-- RECUPERACAO DOS SERVICOS REALIZADOS EM UM PET COM VALOR TOTAL
SELECT Servico.descricao, Servico.preco
FROM PetServico
JOIN Servico ON PetServico.idServico = Servico.idServico
WHERE PetServico.idPet = 1; -- Substitua 1 pelo ID do pet desejado

-- CALCULAR O VALOR TOTAL, ADD GROUP BY
SELECT PetServico.idPet, SUM(Servico.preco) AS ValorTotal
FROM PetServico
JOIN Servico ON PetServico.idServico = Servico.idServico
GROUP BY PetServico.idPed;

-- PET QUE REALIZARAM UM SERVICO ESPECIFICO
SELECT Pet.especie, Pet.idade
FROM Pet
JOIN PetServico ON Pet.idCarro = PetServico.idPet
WHERE PetServico.idServico = 1; -- Substitua 1 pelo ID do serviço desejado

-- RECUPERACAO DOS CLIENTES QUE GASTARAM MAIS DE X EM SERVCICOS
SELECT Cliente.nome, SUM(Servico.preco) AS TotalGasto
FROM Cliente
JOIN Pet ON Cliente.idCliente = Pet.idCliente
JOIN PetServico ON Pet.idPet = PetServico.idPet
JOIN Servico ON PetServico.idServico = Servico.idServico
GROUP BY Cliente.idCliente
HAVING TotalGasto > 150;
